# -*- coding: utf-8 -*-
"""Vec_Embeddings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GgYaJIYbNrFicZvdo2hy55N9PfHy5VrN
"""

!pip install --quiet langchain
!pip install --quiet openai
!pip install --quiet astrapy
!pip install --quiet voyageai

from google.colab import drive
drive.mount('/content/drive')

from google.colab import files
uploaded = files.upload()

from astrapy.db import AstraDB

# Initialize the client
db = AstraDB(
  token="AstraCS:JojuxKENIQUZbHOHsOKzqdxZ:311ac2f4ac1f981f7c69a4bb8566b0bcac48193257fa845da7cff3aabb38395f",
  api_endpoint="https://8b4697c6-4dca-40ac-8a07-7f098c39314b-us-east1.apps.astra.datastax.com",
  namespace = 'student_services')

print(f"Connected to Astra DB: {db.get_collections()}")

vstore = db.create_collection('StudyBuddy', dimension=1536, metric='cosine')

import pandas as pd
db = pd.read_csv("/content/expatrio_study-budy-input.csv")

print(len(db))
db.iloc[0]
print(db.columns)

#PLEASE DON'T RUN THIS CELL.

from openai import OpenAI
import sys
import codecs
import os
import pandas as pd
from tqdm import tqdm
#sys.stdout = codecs.getwriter("utf-8")(sys.stdout.detach()) # Set the standard output encoding to UTF-8
from google.colab import userdata
import voyageai

client = OpenAI(
    base_url="https://api-inference.huggingface.co/v1",
    api_key = '###',
)
db = pd.read_csv("/content/expatrio_study-budy-input.csv")

for i in tqdm(range(1707, 1708)):
    data = []
    for column in db.columns.tolist():
        data.append(f'{column}: {db.iloc[i][column]}')

    prompt = ''.join(data)

    chat_completion = client.chat.completions.create(
        model = 'google/gemma-7b-it',
        messages = [
            {
                "role": "user",
                "content": f'''Given an instance of a course with the following information {prompt},
                summarize the key information into a paragraph while preserving as much detail about the
                university and study name, degree, location, teaching language, program duration as possible.
                The paragraph should also include details about the tuition_fees_program, Cost_of_living, and the semester_contribution as well as possibilities for campus work or external internship opportunities
                Also include whether the program provides accommodation, and what scholarships or funding opportunities are within the university
                Include information about the learning style, desired skills, and background appropriate for the program and if there are any special requirements to secured admission into the program.'''
            }
        ],
        max_tokens=4000
    )
    response = chat_completion.choices[0].message.content
    #print(response)
    #break


    vo = voyageai.Client(api_key= 'pa-O1GaZ-EAYnJAZOO4QgUL1GjbBgpJtMfdhx8sMrmY9zM' )

    vector_embeddings = {
            'content': response,
            '$vector': vo.embed(response, model='voyage-large-2', input_type='document').embeddings[0]
        }
    #print(type(vector_embeddings[i]['$vector']), len(vector_embeddings[i]['$vector']))
    #print(vector_embeddings[i]['$vector'])
    vstore.insert_one(vector_embeddings)

    '''
    with open("expatrio_data.txt", "a", encoding='utf-8') as f:
      f.write(response + '\n\n')
      f.close()
    '''
print('Done')

print(i)

batch_completed = 1024

from google.colab import files
uploaded = files.upload()


f"""Given the following data, {prompt}, about courses in Germany,  Consider yourself a seasoned data engineer.
                You are tasked with providing key information about various courses in Germany in a single-paragraph format.
                The goal is to create a concise overview for efficiently matching international students with suitable programs.
                The paragraph should include the following details: We are designing a matching algorithm that takes information from international students looking to study in Germany and matches them with the best programs or degrees.
                We have a large dataset with multiple entries that contains some information about the different courses in Germany. We need to create a dataset that contains the information about these courses.
                We want to distill the information from our large dataset and summarize it into shorter and smaller versions so that the vector embedding algorithms that will match the student with the program provide accurate results.
                The final data should be written in a paragraph format and contain the following sections respectively: 1- Program name: First and foremost in the paragraph; we need to retrieve the name of the university and the name of the program from those two columns “the university_name” and “study_name.”
                Also, indicate the degree (master”s, bachelor”s, Ph.D.) from the “degree column.” 2- Program Details From the columns “o_teaching_language” and “o_languages,” determine the teaching languages of the course, whether the course is taught in multiple languages or not, and if so, what these languages are.
                Also, consider the mode of study, whether offline, online, or hybrid; eventually, from the column “o_programme_duration,” the number of semesters spent in the program. Moreover, the column “O_joint_degree” indicates whether the program is a double major.
                Eventually, from the “description_content” column, we needed to determine the learning style, desired skills, and background appropriate for someone taking the program. Also include details about the location of the university. 3- Finances:
                For each program, we need to take numbers from the following columns: the tuition_fees_program, Cost_of_living, and the semester_contribution and sum them so that their numerical output would be the total fees for the program.
                Remember, you should provide numerical output here. Moreover, you should browse the column “Possibility_of_finding_part_time_employment” to indicate whether students can get work on campus or external internship opportunities to fund their living costs while at the university.
                Eventually, consider checking in the “accommodation” column whether accommodations are provided for the students because it will determine whether the students should look for independent housing.
                From “funding_opportunities_within_university” and “description_of__above_mentioned_funding_opportunities_within_universities,” indicate if there are scholarships or funding opportunities within the university and discuss them.
                4- Admission Requirements: Eventually, we also need to define if there are any special requirements to secure admission into the program, from admission_requirements and langauge_requirements.
                """

